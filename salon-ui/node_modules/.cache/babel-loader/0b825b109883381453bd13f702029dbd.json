{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\felix.gruener\\\\Downloads\\\\SalonProject\\\\salon-ui\\\\src\\\\components\\\\ChooseService.js\";\nimport React from 'react';\nimport CardColumns from 'react-bootstrap/CardColumns';\nimport ServiceInfo from './ServiceInfo';\nimport { notificationService } from '../services/NotificationService';\nimport { progressService } from '../services/ProgressService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ChooseService extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      services: [],\n      progress: 0\n    };\n  }\n\n  async componentDidMount() {\n    const interval = setInterval(() => {\n      let currentProgress = this.state.progress;\n\n      if (currentProgress < 90) {\n        currentProgress = currentProgress + 1;\n        this.setState({\n          progress: currentProgress\n        });\n        progressService.setCurrentProgress(this.state.progress);\n      }\n    }, 50);\n\n    try {\n      let response = await fetch('http://localhost:8080/api/services/retrieveAvailableSalonServices');\n      let services = await response.json();\n      clearInterval(interval);\n      this.setState({\n        progress: 100\n      });\n      progressService.setCurrentProgress(this.state.progress);\n      this.setState({\n        services: services\n      });\n    } catch (err) {\n      clearInterval(interval);\n      this.setState({\n        progress: 100\n      });\n      progressService.setCurrentProgress(this.state.progress);\n      notificationService.notifyError(\"Something went wrong! : \" + err);\n    }\n\n    setTimeout(() => {\n      progressService.clearProgress();\n      this.setState({\n        progress: 0\n      });\n    }, 1000);\n  }\n\n  render() {\n    const {\n      services\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(CardColumns, {\n      children: services.map((info, index) => /*#__PURE__*/_jsxDEV(ServiceInfo, {\n        info: info\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ChooseService;","map":{"version":3,"sources":["C:/Users/felix.gruener/Downloads/SalonProject/salon-ui/src/components/ChooseService.js"],"names":["React","CardColumns","ServiceInfo","notificationService","progressService","ChooseService","Component","constructor","props","state","services","progress","componentDidMount","interval","setInterval","currentProgress","setState","setCurrentProgress","response","fetch","json","clearInterval","err","notifyError","setTimeout","clearProgress","render","map","info","index"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,mBAAT,QAAoC,iCAApC;AACA,SAASC,eAAT,QAAgC,6BAAhC;;;AAEA,MAAMC,aAAN,SAA4BL,KAAK,CAACM,SAAlC,CAA4C;AACxCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,EADD;AAETC,MAAAA,QAAQ,EAAE;AAFD,KAAb;AAIH;;AAEsB,QAAjBC,iBAAiB,GAAG;AACtB,UAAMC,QAAQ,GAAGC,WAAW,CAAC,MAAM;AAC/B,UAAIC,eAAe,GAAG,KAAKN,KAAL,CAAWE,QAAjC;;AACA,UAAII,eAAe,GAAG,EAAtB,EAA0B;AACtBA,QAAAA,eAAe,GAAGA,eAAe,GAAG,CAApC;AACA,aAAKC,QAAL,CAAc;AAAEL,UAAAA,QAAQ,EAAEI;AAAZ,SAAd;AACAX,QAAAA,eAAe,CAACa,kBAAhB,CAAmC,KAAKR,KAAL,CAAWE,QAA9C;AACH;AACJ,KAP2B,EAOzB,EAPyB,CAA5B;;AAQA,QAAI;AACA,UAAIO,QAAQ,GAAG,MAAMC,KAAK,CAAC,mEAAD,CAA1B;AACA,UAAIT,QAAQ,GAAG,MAAMQ,QAAQ,CAACE,IAAT,EAArB;AACAC,MAAAA,aAAa,CAACR,QAAD,CAAb;AACA,WAAKG,QAAL,CAAc;AAAEL,QAAAA,QAAQ,EAAE;AAAZ,OAAd;AACAP,MAAAA,eAAe,CAACa,kBAAhB,CAAmC,KAAKR,KAAL,CAAWE,QAA9C;AACA,WAAKK,QAAL,CAAc;AAAEN,QAAAA,QAAQ,EAAEA;AAAZ,OAAd;AACH,KAPD,CAOE,OAAMY,GAAN,EAAW;AACTD,MAAAA,aAAa,CAACR,QAAD,CAAb;AACA,WAAKG,QAAL,CAAc;AAAEL,QAAAA,QAAQ,EAAE;AAAZ,OAAd;AACAP,MAAAA,eAAe,CAACa,kBAAhB,CAAmC,KAAKR,KAAL,CAAWE,QAA9C;AACAR,MAAAA,mBAAmB,CAACoB,WAApB,CAAgC,6BAA6BD,GAA7D;AACH;;AACDE,IAAAA,UAAU,CAAC,MAAM;AACbpB,MAAAA,eAAe,CAACqB,aAAhB;AACA,WAAKT,QAAL,CAAc;AAAEL,QAAAA,QAAQ,EAAE;AAAZ,OAAd;AACH,KAHS,EAGP,IAHO,CAAV;AAIH;;AAEDe,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEhB,MAAAA;AAAF,QAAe,KAAKD,KAA1B;AACA,wBACI,QAAC,WAAD;AAAA,gBACKC,QAAQ,CAACiB,GAAT,CAAa,CAACC,IAAD,EAAOC,KAAP,kBACV,QAAC,WAAD;AAAyB,QAAA,IAAI,EAAED;AAA/B,SAAkBC,KAAlB;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH;;AA/CuC;;AAkD5C,eAAexB,aAAf","sourcesContent":["import React from 'react';\r\nimport CardColumns from 'react-bootstrap/CardColumns';\r\nimport ServiceInfo from './ServiceInfo';\r\nimport { notificationService } from '../services/NotificationService';\r\nimport { progressService } from '../services/ProgressService';\r\n\r\nclass ChooseService extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            services: [],\r\n            progress: 0\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const interval = setInterval(() => {\r\n            let currentProgress = this.state.progress;\r\n            if (currentProgress < 90) {\r\n                currentProgress = currentProgress + 1;\r\n                this.setState({ progress: currentProgress });\r\n                progressService.setCurrentProgress(this.state.progress);\r\n            }\r\n        }, 50);\r\n        try {\r\n            let response = await fetch('http://localhost:8080/api/services/retrieveAvailableSalonServices');\r\n            let services = await response.json();\r\n            clearInterval(interval);\r\n            this.setState({ progress: 100 });\r\n            progressService.setCurrentProgress(this.state.progress);\r\n            this.setState({ services: services });\r\n        } catch(err) {\r\n            clearInterval(interval);\r\n            this.setState({ progress: 100 });\r\n            progressService.setCurrentProgress(this.state.progress);\r\n            notificationService.notifyError(\"Something went wrong! : \" + err);\r\n        }\r\n        setTimeout(() => {\r\n            progressService.clearProgress();\r\n            this.setState({ progress: 0 });\r\n        }, 1000);\r\n    }\r\n\r\n    render() {\r\n        const { services } = this.state;\r\n        return (\r\n            <CardColumns>\r\n                {services.map((info, index) =>\r\n                    <ServiceInfo key={index} info={info}/>\r\n                )}\r\n            </CardColumns>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ChooseService;"]},"metadata":{},"sourceType":"module"}