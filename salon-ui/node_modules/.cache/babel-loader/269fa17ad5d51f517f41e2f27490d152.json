{"ast":null,"code":"import { Subject } from 'rxjs';\nconst subject = new Subject();\nexport const progressService = {\n  setCurrentProgress: progress => subject.next({\n    now: progress\n  }),\n  clearProgress: () => subject.next(),\n  getProgress: () => subject.asObservable()\n};","map":{"version":3,"sources":["C:/Users/felix.gruener/Downloads/SalonProject/salon-ui/src/services/ProgressService.js"],"names":["Subject","subject","progressService","setCurrentProgress","progress","next","now","clearProgress","getProgress","asObservable"],"mappings":"AAAA,SAASA,OAAT,QAAwB,MAAxB;AAEA,MAAMC,OAAO,GAAG,IAAID,OAAJ,EAAhB;AAEA,OAAO,MAAME,eAAe,GAAG;AAC3BC,EAAAA,kBAAkB,EAAEC,QAAQ,IAAIH,OAAO,CAACI,IAAR,CAAa;AAAEC,IAAAA,GAAG,EAAEF;AAAP,GAAb,CADL;AAE3BG,EAAAA,aAAa,EAAE,MAAMN,OAAO,CAACI,IAAR,EAFM;AAG3BG,EAAAA,WAAW,EAAE,MAAMP,OAAO,CAACQ,YAAR;AAHQ,CAAxB","sourcesContent":["import { Subject } from 'rxjs';\r\n\r\nconst subject = new Subject();\r\n\r\nexport const progressService = {\r\n    setCurrentProgress: progress => subject.next({ now: progress }),\r\n    clearProgress: () => subject.next(),\r\n    getProgress: () => subject.asObservable()\r\n};"]},"metadata":{},"sourceType":"module"}