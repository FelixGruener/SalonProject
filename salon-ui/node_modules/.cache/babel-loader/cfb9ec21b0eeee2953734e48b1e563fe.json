{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\felix.gruener\\\\Downloads\\\\SalonProject\\\\salon-ui\\\\src\\\\components\\\\LoadingIndicatorComponent.js\";\nimport React, { Component, Fragment } from 'react';\nimport { loadingIndicator } from './LoadingIndicator';\nimport { ProgressBar } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass LoadingIndicatorComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      \"showLoading\": false\n    };\n  }\n\n  componentDidMount() {\n    this.subscription = loadingIndicator.onChange().subscribe(value => {\n      this.setState({\n        \"showLoading\": value\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.subscription.unsubscribe();\n  }\n\n  render() {\n    const {\n      showLoading\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: showLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-container\",\n        children: /*#__PURE__*/_jsxDEV(ProgressBar, {\n          animated: true,\n          now: 100\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 67\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 31\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nexport default LoadingIndicatorComponent;","map":{"version":3,"sources":["C:/Users/felix.gruener/Downloads/SalonProject/salon-ui/src/components/LoadingIndicatorComponent.js"],"names":["React","Component","Fragment","loadingIndicator","ProgressBar","LoadingIndicatorComponent","constructor","props","state","componentDidMount","subscription","onChange","subscribe","value","setState","componentWillUnmount","unsubscribe","render","showLoading"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AACA,SAAQC,WAAR,QAA0B,iBAA1B;;;AAEA,MAAMC,yBAAN,SAAwCJ,SAAxC,CAAkD;AAI9CK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACT,qBAAe;AADN,KAAb;AAGH;;AAEDC,EAAAA,iBAAiB,GAAG;AAEhB,SAAKC,YAAL,GAAqBP,gBAAgB,CAACQ,QAAjB,GAA4BC,SAA5B,CAAsCC,KAAK,IAAI;AAEhE,WAAKC,QAAL,CAAc;AACV,uBAAeD;AADL,OAAd;AAGH,KALoB,CAArB;AAMH;;AAEDE,EAAAA,oBAAoB,GAAG;AACnB,SAAKL,YAAL,CAAkBM,WAAlB;AACH;;AAEDC,EAAAA,MAAM,GAAG;AAEL,UAAM;AAACC,MAAAA;AAAD,QAAgB,KAAKV,KAA3B;AAEA,wBAAO,QAAC,QAAD;AAAA,gBAEDU,WAAW,iBAAK;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,+BAAoC,QAAC,WAAD;AAAa,UAAA,QAAQ,MAArB;AAAsB,UAAA,GAAG,EAAE;AAA3B;AAAA;AAAA;AAAA;AAAA;AAApC;AAAA;AAAA;AAAA;AAAA;AAFf;AAAA;AAAA;AAAA;AAAA,YAAP;AAKH;;AAlC6C;;AAsClD,eAAeb,yBAAf","sourcesContent":["import React, {Component, Fragment} from 'react';\r\nimport { loadingIndicator } from './LoadingIndicator';\r\nimport {ProgressBar} from \"react-bootstrap\";\r\n\r\nclass LoadingIndicatorComponent extends Component {\r\n\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            \"showLoading\": false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        this.subscription =  loadingIndicator.onChange().subscribe(value => {\r\n\r\n            this.setState({\r\n                \"showLoading\": value\r\n            })\r\n        })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.subscription.unsubscribe();\r\n    }\r\n\r\n    render() {\r\n\r\n        const {showLoading} = this.state\r\n\r\n        return <Fragment>\r\n\r\n            { showLoading &&  <div className=\"progress-container\"><ProgressBar animated now={100} /></div>}\r\n        </Fragment>\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default LoadingIndicatorComponent;"]},"metadata":{},"sourceType":"module"}