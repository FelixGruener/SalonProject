{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\felix.gruener\\\\Downloads\\\\SalonProject\\\\salon-ui\\\\src\\\\components\\\\AppNotificationComponent.js\";\nimport React from 'react';\nimport { Alert } from 'react-bootstrap';\nimport { notificationService } from '../services/NotificationService';\nimport { appNotification } from \"./app-notification\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AppNotificationComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      \"show\": false,\n      \"title\": '',\n      \"variant\": '',\n      \"message\": ''\n    };\n  }\n\n  componentDidMount() {\n    this.subscription = appNotification.onChange().subscribe(res => {\n      this.onNotificationReceived(res);\n    });\n  }\n\n  onNotificationReceived(res) {\n    this.setState({\n      \"show\": true,\n      \"title\": res.title,\n      \"variant\": res.variant,\n      \"message\": res.message\n    });\n    this.resetAfterTenSeconds();\n  }\n\n  componentWillUnmount() {\n    this.subscription.unsubscribe();\n  }\n\n  reset() {\n    this.setState({\n      \"show\": false,\n      \"title\": '',\n      \"variant\": '',\n      \"message\": ''\n    });\n  }\n\n  resetAfterTenSeconds() {\n    setTimeout(() => {\n      this.reset();\n    }, TEN_SECONDS);\n  }\n\n  render() {\n    const {\n      show,\n      title,\n      message,\n      variant\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: show == true && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-container \",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: /*#__PURE__*/_jsxDEV(Alert, {\n            variant: variant,\n            onClose: () => this.reset(),\n            dismissible: true,\n            children: [/*#__PURE__*/_jsxDEV(Alert.Heading, {\n              children: title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 30\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nexport default AppNotificationComponent;","map":{"version":3,"sources":["C:/Users/felix.gruener/Downloads/SalonProject/salon-ui/src/components/AppNotificationComponent.js"],"names":["React","Alert","notificationService","appNotification","AppNotificationComponent","Component","constructor","props","state","componentDidMount","subscription","onChange","subscribe","res","onNotificationReceived","setState","title","variant","message","resetAfterTenSeconds","componentWillUnmount","unsubscribe","reset","setTimeout","TEN_SECONDS","render","show"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,QAAoB,iBAApB;AACA,SAASC,mBAAT,QAAoC,iCAApC;AACA,SAAQC,eAAR,QAA8B,oBAA9B;;;AAEA,MAAMC,wBAAN,SAAuCJ,KAAK,CAACK,SAA7C,CAAuD;AAGnDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACT,cAAQ,KADC;AAET,eAAS,EAFA;AAGT,iBAAW,EAHF;AAIT,iBAAW;AAJF,KAAb;AAMH;;AAEDC,EAAAA,iBAAiB,GAAG;AAEhB,SAAKC,YAAL,GAAoBP,eAAe,CAACQ,QAAhB,GAA2BC,SAA3B,CAAqCC,GAAG,IAAI;AAC5D,WAAKC,sBAAL,CAA4BD,GAA5B;AACH,KAFmB,CAApB;AAGH;;AAEDC,EAAAA,sBAAsB,CAACD,GAAD,EAAM;AAIxB,SAAKE,QAAL,CAAc;AACV,cAAQ,IADE;AAEV,eAASF,GAAG,CAACG,KAFH;AAGV,iBAAWH,GAAG,CAACI,OAHL;AAIV,iBAAWJ,GAAG,CAACK;AAJL,KAAd;AAMA,SAAKC,oBAAL;AAEH;;AAEDC,EAAAA,oBAAoB,GAAG;AACnB,SAAKV,YAAL,CAAkBW,WAAlB;AACH;;AAEDC,EAAAA,KAAK,GAAG;AAEJ,SAAKP,QAAL,CAAc;AACV,cAAQ,KADE;AAEV,eAAS,EAFC;AAGV,iBAAW,EAHD;AAIV,iBAAW;AAJD,KAAd;AAMH;;AAEDI,EAAAA,oBAAoB,GAAG;AACnBI,IAAAA,UAAU,CAAC,MAAM;AACb,WAAKD,KAAL;AACH,KAFS,EAEPE,WAFO,CAAV;AAGH;;AAEDC,EAAAA,MAAM,GAAG;AAEL,UAAM;AAACC,MAAAA,IAAD;AAAOV,MAAAA,KAAP;AAAcE,MAAAA,OAAd;AAAuBD,MAAAA;AAAvB,QAAkC,KAAKT,KAA7C;AAEA,wBAAO,QAAC,QAAD;AAAA,gBAEFkB,IAAI,IAAI,IAAR,iBAAgB;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,+BAEb;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,iCACI,QAAC,KAAD;AAAO,YAAA,OAAO,EAAET,OAAhB;AAAyB,YAAA,OAAO,EAAE,MAAM,KAAKK,KAAL,EAAxC;AAAsD,YAAA,WAAW,MAAjE;AAAA,oCACI,QAAC,KAAD,CAAO,OAAP;AAAA,wBAAgBN;AAAhB;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA,wBACKE;AADL;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAFa;AAAA;AAAA;AAAA;AAAA;AAFd;AAAA;AAAA;AAAA;AAAA,YAAP;AAgBH;;AA1EkD;;AA8EvD,eAAed,wBAAf","sourcesContent":["import React from 'react';\r\nimport {Alert} from 'react-bootstrap'\r\nimport { notificationService } from '../services/NotificationService';\r\nimport {appNotification} from \"./app-notification\";\r\n\r\nclass AppNotificationComponent extends React.Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            \"show\": false,\r\n            \"title\": '',\r\n            \"variant\": '',\r\n            \"message\": '',\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        this.subscription = appNotification.onChange().subscribe(res => {\r\n            this.onNotificationReceived(res);\r\n        })\r\n    }\r\n\r\n    onNotificationReceived(res) {\r\n\r\n\r\n\r\n        this.setState({\r\n            \"show\": true,\r\n            \"title\": res.title,\r\n            \"variant\": res.variant,\r\n            \"message\": res.message\r\n        });\r\n        this.resetAfterTenSeconds()\r\n\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.subscription.unsubscribe();\r\n    }\r\n\r\n    reset() {\r\n\r\n        this.setState({\r\n            \"show\": false,\r\n            \"title\": '',\r\n            \"variant\": '',\r\n            \"message\": '',\r\n        });\r\n    }\r\n\r\n    resetAfterTenSeconds() {\r\n        setTimeout(() => {\r\n            this.reset();\r\n        }, TEN_SECONDS)\r\n    }\r\n\r\n    render() {\r\n\r\n        const {show, title, message, variant} = this.state\r\n\r\n        return <Fragment>\r\n\r\n            {show == true && <div className=\"message-container \">\r\n\r\n                <div className=\"container\">\r\n                    <Alert variant={variant} onClose={() => this.reset()} dismissible>\r\n                        <Alert.Heading>{title}</Alert.Heading>\r\n                        <p>\r\n                            {message}\r\n                        </p>\r\n                    </Alert>\r\n                </div>\r\n\r\n            </div>}\r\n        </Fragment>\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default AppNotificationComponent;"]},"metadata":{},"sourceType":"module"}